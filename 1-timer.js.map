{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\"\nimport \"flatpickr/dist/flatpickr.min.css\"\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\"\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates, instance) {\n      const dateInPicker = selectedDates[0].getTime()\n      const now = new Date();\n      button.disabled = false\n      if (dateInPicker <= now) {\n        iziToast.error({\n          title: 'Error',\n          message: 'Please select a future date and time.',\n        });\n        button.disabled = true;\n      } else {\n        button.disabled = false;\n      }\n    },\n};\n\nconst dataSelector = document.querySelector(\"#datetime-picker\")\nconst button = document.querySelector('[data-start]');\nlet intervalId = null\nbutton.disabled = true;\n\nconst dataPick = flatpickr(dataSelector, options)\n\nconst timerElements = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  \n  // Remaining days\n  const days = Math.floor(ms / day)\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour)\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute)\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second)\n  \n  return { days, hours, minutes, seconds }\n}\n\nbutton.addEventListener('click', function() {\n  const selectedDate = new Date(dataSelector.value);\n  if(Date.now() < selectedDate) {\n    dataSelector.disabled = true;\n    button.disabled = true;\n    intervalId = setInterval(() => {\n      const currentTime = new Date();\n      const timeDifference = selectedDate - currentTime;\n      if (timeDifference <= 0) {\n        clearInterval(intervalId);\n        iziToast.success({\n          title: 'Timer Finished',\n          message: 'The countdown has ended.',\n        });\n        dataSelector.disabled = false;\n      } else {\n        const timeArray = convertMs(timeDifference)\n        for (const key in timerElements) {\n          if (timerElements[key]) { \n            timerElements[key].textContent = timeArray[key].toString().padStart(2, '0')\n          }\n        }\n      }\n    }, 1000);\n  }\n})\n"],"names":["options","selectedDates","instance","dateInPicker","now","button","iziToast","dataSelector","intervalId","flatpickr","timerElements","convertMs","ms","days","hours","minutes","seconds","selectedDate","timeDifference","timeArray","key"],"mappings":"0IAMA,MAAMA,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAeC,EAAU,CAC/B,MAAMC,EAAeF,EAAc,CAAC,EAAE,QAAS,EACzCG,EAAM,IAAI,KAChBC,EAAO,SAAW,GACdF,GAAgBC,GAClBE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,uCACnB,CAAS,EACDD,EAAO,SAAW,IAElBA,EAAO,SAAW,EAErB,CACL,EAEME,EAAe,SAAS,cAAc,kBAAkB,EACxDF,EAAS,SAAS,cAAc,cAAc,EACpD,IAAIG,EAAa,KACjBH,EAAO,SAAW,GAEDI,EAAUF,EAAcP,CAAO,EAEhD,MAAMU,EAAgB,CACpB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C,CAEAX,EAAO,iBAAiB,QAAS,UAAW,CAC1C,MAAMY,EAAe,IAAI,KAAKV,EAAa,KAAK,EAC7C,KAAK,IAAK,EAAGU,IACdV,EAAa,SAAW,GACxBF,EAAO,SAAW,GAClBG,EAAa,YAAY,IAAM,CAE7B,MAAMU,EAAiBD,EADH,IAAI,KAExB,GAAIC,GAAkB,EACpB,cAAcV,CAAU,EACxBF,EAAS,QAAQ,CACf,MAAO,iBACP,QAAS,0BACnB,CAAS,EACDC,EAAa,SAAW,OACnB,CACL,MAAMY,EAAYR,EAAUO,CAAc,EAC1C,UAAWE,KAAOV,EACZA,EAAcU,CAAG,IACnBV,EAAcU,CAAG,EAAE,YAAcD,EAAUC,CAAG,EAAE,WAAW,SAAS,EAAG,GAAG,EAG/E,CACF,EAAE,GAAI,EAEX,CAAC"}